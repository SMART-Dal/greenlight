["tensorflow.keras.mixed_precision.Policy()", "tensorflow.keras.mixed_precision.set_global_policy()", "tensorflow.keras.Input()", "tensorflow.keras.layers.Dense()", "tensorflow.keras.layers.Dense(10, activation='softmax', name='predictions')()", "tensorflow.keras.layers.Dense(10, name='dense_logits')()", "tensorflow.keras.layers.Activation('softmax', dtype='float32', name='predictions')()", "tensorflow.keras.layers.Activation('linear', dtype='float32')()", "tensorflow.keras.Model()", "tensorflow.keras.Model.compile()", "tensorflow.keras.Model.get_weights()", "tensorflow.constant()", "(tensorflow.constant ** 2).numpy()", "tensorflow.keras.optimizers.RMSprop()", "tensorflow.keras.mixed_precision.LossScaleOptimizer()", "tensorflow.keras.losses.SparseCategoricalCrossentropy()", "tensorflow.data.Dataset.from_tensor_slices((x_train, y_train)).shuffle(10000).batch()", "tensorflow.data.Dataset.from_tensor_slices((x_test, y_test)).batch()", "tensorflow.keras.Model.set_weights()", "tensorflow.keras.metrics.Mean()", "tensorflow.keras.metrics.SparseCategoricalAccuracy()", "tensorflow.keras.mixed_precision.LossScaleOptimizer.get_scaled_loss()", "tensorflow.keras.mixed_precision.LossScaleOptimizer.get_unscaled_gradients()", "tensorflow.keras.mixed_precision.LossScaleOptimizer.apply_gradients()", "tensorflow.keras.metrics.SparseCategoricalAccuracy.update_state()"]