2023-12-09 13:33:37.849907: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.
2023-12-09 13:34:08.131201: W tensorflow/core/kernels/data/cache_dataset_ops.cc:768] The calling iterator did not fully read the dataset being cached. In order to avoid unexpected truncation of the dataset, the partially cached contents of the dataset  will be discarded. This can happen if you have an input pipeline similar to `dataset.cache().take(k).repeat()`. You should use `dataset.take(k).cache().repeat()` instead.
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/backend.py:414: UserWarning: `tf.keras.backend.set_learning_phase` is deprecated and will be removed after 2020-10-11. To update it, simply pass a True/False value to the `training` argument of the `__call__` method of your layer or model.
  warnings.warn('`tf.keras.backend.set_learning_phase` is deprecated and '
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/training/training_util.py:400: Variable.initialized_value (from tensorflow.python.ops.variables) is deprecated and will be removed in a future version.
Instructions for updating:
Use Variable.read_value. Variables in 2.X are initialized automatically both in eager and graph (inside tf.defun) contexts.
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/training/training_util.py:400: Variable.initialized_value (from tensorflow.python.ops.variables) is deprecated and will be removed in a future version.
Instructions for updating:
Use Variable.read_value. Variables in 2.X are initialized automatically both in eager and graph (inside tf.defun) contexts.
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/backend.py:414: UserWarning: `tf.keras.backend.set_learning_phase` is deprecated and will be removed after 2020-10-11. To update it, simply pass a True/False value to the `training` argument of the `__call__` method of your layer or model.
  warnings.warn('`tf.keras.backend.set_learning_phase` is deprecated and '
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/backend.py:414: UserWarning: `tf.keras.backend.set_learning_phase` is deprecated and will be removed after 2020-10-11. To update it, simply pass a True/False value to the `training` argument of the `__call__` method of your layer or model.
  warnings.warn('`tf.keras.backend.set_learning_phase` is deprecated and '
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/engine/training_v1.py:2057: UserWarning: `Model.state_updates` will be removed in a future version. This property should not be used in TensorFlow 2.0, as `updates` are applied automatically.
  updates = self.state_updates
[EXECUTION] [13:32:44] Waiting before running function for 10 seconds.
[EXECUTION] [13:32:54] Sensors started
[STABLE CHECK] [13:32:57] Temperature too high: mean is 40.5, which is greater than 40
[STABLE CHECK] [13:32:57] Temperature is too high.
[STABLE CHECK] [13:32:57] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [13:33:17] Success: temperature is below threshold.
[MAIN] [13:33:17] Terminated sensors
[STABLE CHECK] [13:33:17] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [13:33:37] Success: Machine is stable.
[EXECUTION] [13:33:37] Successfully reached stable state
[EXECUTION] [13:33:37] waiting idle for 30 seconds after function execution
[EXECUTION] [13:34:07] Performed tensorflow.keras.models.Sequential() on input and will now save energy data.
inside_arg_size
++++++4++++++
++++++4++++++
++++++5++++++
5-size 9568.0
++++++5++++++
5-size 5760.0
++++++5++++++
5-size 9408.0
4-size 24736.0
++++++5++++++
5-size 9568.0
++++++5++++++
5-size 5760.0
++++++5++++++
5-size 9408.0
4-size 24736.0
++++++4++++++
++++++5++++++
5-size 9568.0
++++++5++++++
5-size 5760.0
++++++5++++++
5-size 9408.0
4-size 24736.0
++++++5++++++
5-size 9568.0
++++++5++++++
5-size 5760.0
++++++5++++++
5-size 9408.0
outside_arg_size
inside_kwarg_size
outside_kwarg_size
inside_object_size
outside_object_size
[EXECUTION] [13:34:07] Result: {'tensorflow.keras.models.Sequential()': {'energy_data': {'cpu': '{"columns":["time_elapsed","energy
[EXECUTION] [13:34:07] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/keras_model_to_estimator/experiment-5.json
Model: "sequential"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 dense (Dense)               (None, 16)                80        
                                                                 
 dropout (Dropout)           (None, 16)                0         
                                                                 
 dense_1 (Dense)             (None, 3)                 51        
                                                                 
=================================================================
Total params: 131
Trainable params: 131
Non-trainable params: 0
_________________________________________________________________
{'dense_input': <tf.Tensor: shape=(32, 4), dtype=float32, numpy=
array([[5.1, 3.4, 1.5, 0.2],
       [7.7, 3. , 6.1, 2.3],
       [5.7, 2.8, 4.5, 1.3],
       [6.8, 3.2, 5.9, 2.3],
       [5.2, 3.4, 1.4, 0.2],
       [5.6, 2.9, 3.6, 1.3],
       [5.5, 2.6, 4.4, 1.2],
       [5.5, 2.4, 3.7, 1. ],
       [4.6, 3.4, 1.4, 0.3],
       [7.7, 2.8, 6.7, 2. ],
       [7. , 3.2, 4.7, 1.4],
       [4.6, 3.2, 1.4, 0.2],
       [6.5, 3. , 5.2, 2. ],
       [5.5, 4.2, 1.4, 0.2],
       [5.4, 3.9, 1.3, 0.4],
       [5. , 3.5, 1.3, 0.3],
       [5.1, 3.8, 1.5, 0.3],
       [4.8, 3. , 1.4, 0.1],
       [6.5, 3. , 5.8, 2.2],
       [7.6, 3. , 6.6, 2.1],
       [6.7, 3.3, 5.7, 2.1],
       [7.9, 3.8, 6.4, 2. ],
       [6.7, 3. , 5.2, 2.3],
       [5.8, 4. , 1.2, 0.2],
       [6.3, 2.5, 5. , 1.9],
       [5. , 3. , 1.6, 0.2],
       [6.9, 3.1, 5.1, 2.3],
       [6.1, 3. , 4.6, 1.4],
       [5.8, 2.7, 4.1, 1. ],
       [5.2, 2.7, 3.9, 1.4],
       [6.7, 3. , 5. , 1.7],
       [5.7, 2.6, 3.5, 1. ]], dtype=float32)>}
tf.Tensor([0 2 1 2 0 1 1 1 0 2 1 0 2 0 0 0 0 0 2 2 2 2 2 0 2 0 2 1 1 1 1 1], shape=(32,), dtype=int64)
[EXECUTION] [13:34:08] Waiting before running function for 10 seconds.
[EXECUTION] [13:34:18] Sensors started
[STABLE CHECK] [13:34:21] Temperature too high: mean is 44.2, which is greater than 40
[STABLE CHECK] [13:34:21] Temperature is too high.
[STABLE CHECK] [13:34:21] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [13:34:41] Temperature too high: mean is 41, which is greater than 40
[STABLE CHECK] [13:34:41] Temperature is too high.
[STABLE CHECK] [13:34:41] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [13:35:01] Temperature too high: mean is 40.7, which is greater than 40
[STABLE CHECK] [13:35:01] Temperature is too high.
[STABLE CHECK] [13:35:01] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [13:35:21] Success: temperature is below threshold.
[MAIN] [13:35:21] Terminated sensors
[STABLE CHECK] [13:35:21] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [13:35:41] Success: Machine is stable.
[EXECUTION] [13:35:41] Successfully reached stable state
[EXECUTION] [13:35:44] waiting idle for 30 seconds after function execution
[EXECUTION] [13:36:14] Performed tensorflow.keras.estimator.model_to_estimator.train() on input and will now save energy data.
inside_arg_size
outside_arg_size
inside_kwarg_size
++++++4++++++
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
4-size 120.0
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
outside_kwarg_size
inside_object_size
++++++5++++++
5-size 4264.0
outside_object_size
[EXECUTION] [13:36:14] Result: {'tensorflow.keras.estimator.model_to_estimator.train()': {'energy_data': {'cpu': '{"columns":["time
[EXECUTION] [13:36:14] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/keras_model_to_estimator/experiment-5.json
Eval result: {'loss': 0.37998572, 'global_step': 500}
