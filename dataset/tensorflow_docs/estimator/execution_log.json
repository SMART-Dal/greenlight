WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/training/training_util.py:400: Variable.initialized_value (from tensorflow.python.ops.variables) is deprecated and will be removed in a future version.
Instructions for updating:
Use Variable.read_value. Variables in 2.X are initialized automatically both in eager and graph (inside tf.defun) contexts.
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/canned/linear.py:1468: UserWarning: `layer.add_variable` is deprecated and will be removed in a future version. Please use `layer.add_weight` method instead.
  self.bias = self.add_variable(
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/optimizer_v2/ftrl.py:148: calling Constant.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.
Instructions for updating:
Call initializer instance with the dtype argument instead of passing it to the constructor
2023-12-09 04:32:37.409028: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.
2023-12-09 04:32:39.885043: W tensorflow/core/kernels/data/cache_dataset_ops.cc:768] The calling iterator did not fully read the dataset being cached. In order to avoid unexpected truncation of the dataset, the partially cached contents of the dataset  will be discarded. This can happen if you have an input pipeline similar to `dataset.cache().take(k).repeat()`. You should use `dataset.take(k).cache().repeat()` instead.
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/canned/linear.py:1468: UserWarning: `layer.add_variable` is deprecated and will be removed in a future version. Please use `layer.add_weight` method instead.
  self.bias = self.add_variable(
2023-12-09 04:33:44.517284: W tensorflow/core/kernels/data/cache_dataset_ops.cc:768] The calling iterator did not fully read the dataset being cached. In order to avoid unexpected truncation of the dataset, the partially cached contents of the dataset  will be discarded. This can happen if you have an input pipeline similar to `dataset.cache().take(k).repeat()`. You should use `dataset.take(k).cache().repeat()` instead.
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/canned/linear.py:1468: UserWarning: `layer.add_variable` is deprecated and will be removed in a future version. Please use `layer.add_weight` method instead.
  self.bias = self.add_variable(
2023-12-09 04:34:15.324465: W tensorflow/core/kernels/data/cache_dataset_ops.cc:768] The calling iterator did not fully read the dataset being cached. In order to avoid unexpected truncation of the dataset, the partially cached contents of the dataset  will be discarded. This can happen if you have an input pipeline similar to `dataset.cache().take(k).repeat()`. You should use `dataset.take(k).cache().repeat()` instead.
WARNING:tensorflow:Using temporary folder as model directory: /tmp/tmp02uoebr8
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/backend.py:414: UserWarning: `tf.keras.backend.set_learning_phase` is deprecated and will be removed after 2020-10-11. To update it, simply pass a True/False value to the `training` argument of the `__call__` method of your layer or model.
  warnings.warn('`tf.keras.backend.set_learning_phase` is deprecated and '
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/engine/functional.py:1410: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.
  layer_config = serialize_layer_fn(layer)
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/backend.py:414: UserWarning: `tf.keras.backend.set_learning_phase` is deprecated and will be removed after 2020-10-11. To update it, simply pass a True/False value to the `training` argument of the `__call__` method of your layer or model.
  warnings.warn('`tf.keras.backend.set_learning_phase` is deprecated and '
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/engine/functional.py:1410: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.
  layer_config = serialize_layer_fn(layer)
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/backend.py:414: UserWarning: `tf.keras.backend.set_learning_phase` is deprecated and will be removed after 2020-10-11. To update it, simply pass a True/False value to the `training` argument of the `__call__` method of your layer or model.
  warnings.warn('`tf.keras.backend.set_learning_phase` is deprecated and '
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/engine/functional.py:1410: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.
  layer_config = serialize_layer_fn(layer)
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/keras/engine/training_v1.py:2057: UserWarning: `Model.state_updates` will be removed in a future version. This property should not be used in TensorFlow 2.0, as `updates` are applied automatically.
  updates = self.state_updates
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/training/saver.py:1165: get_checkpoint_mtimes (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
Instructions for updating:
Use standard file utilities to get mtimes.
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/training/saver.py:1165: get_checkpoint_mtimes (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
Instructions for updating:
Use standard file utilities to get mtimes.
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/training/saver.py:1056: remove_checkpoint (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
Instructions for updating:
Use standard file APIs to delete files with this prefix.
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/training/saver.py:1056: remove_checkpoint (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
Instructions for updating:
Use standard file APIs to delete files with this prefix.
[EXECUTION] [04:32:03] Waiting before running function for 10 seconds.
[EXECUTION] [04:32:13] Sensors started
[STABLE CHECK] [04:32:16] Success: temperature is below threshold.
[MAIN] [04:32:16] Terminated sensors
[STABLE CHECK] [04:32:16] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [04:32:36] Success: Machine is stable.
[EXECUTION] [04:32:36] Successfully reached stable state
[EXECUTION] [04:32:39] waiting idle for 30 seconds after function execution
[EXECUTION] [04:33:09] Performed tensorflow.estimator.LinearClassifier.train() on input and will now save energy data.
inside_arg_size
outside_arg_size
inside_kwarg_size
++++++4++++++
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
4-size 120.0
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
outside_kwarg_size
inside_object_size
++++++5++++++
5-size 3912.0
outside_object_size
[EXECUTION] [04:33:09] Result: {'tensorflow.estimator.LinearClassifier.train()': {'energy_data': {'cpu': '{"columns":["time_elapsed
[EXECUTION] [04:33:09] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/estimator/experiment-5.json
[EXECUTION] [04:33:09] Waiting before running function for 10 seconds.
[EXECUTION] [04:33:20] Sensors started
[STABLE CHECK] [04:33:23] Success: temperature is below threshold.
[MAIN] [04:33:23] Terminated sensors
[STABLE CHECK] [04:33:23] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [04:33:43] Success: Machine is stable.
[EXECUTION] [04:33:43] Successfully reached stable state
[EXECUTION] [04:33:44] waiting idle for 30 seconds after function execution
[EXECUTION] [04:34:14] Performed tensorflow.estimator.LinearClassifier.train.evaluate() on input and will now save energy data.
inside_arg_size
++++++4++++++
++++++5++++++
5-size 0.0
4-size 0.0
++++++5++++++
5-size 0.0
outside_arg_size
inside_kwarg_size
++++++4++++++
++++++5++++++
5-size 56.0
4-size 56.0
++++++5++++++
5-size 56.0
outside_kwarg_size
inside_object_size
++++++5++++++
5-size 3912.0
outside_object_size
[EXECUTION] [04:34:14] Result: {'tensorflow.estimator.LinearClassifier.train.evaluate()': {'energy_data': {'cpu': '{"columns":["tim
[EXECUTION] [04:34:14] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/estimator/experiment-5.json
accuracy : 0.70625
accuracy_baseline : 0.634375
auc : 0.72843254
auc_precision_recall : 0.6190128
average_loss : 0.58380103
label/mean : 0.365625
loss : 0.58380103
precision : 0.6533333
prediction/mean : 0.37194055
recall : 0.41880342
global_step : 100
logits : [-0.5325743]
logistic : [0.36991668]
probabilities : [0.6300833  0.36991665]
class_ids : [0]
classes : [b'0']
all_class_ids : [0 1]
all_classes : [b'0' b'1']
[EXECUTION] [04:34:15] Waiting before running function for 10 seconds.
[EXECUTION] [04:34:25] Sensors started
[STABLE CHECK] [04:34:28] Temperature too high: mean is 40.55, which is greater than 40
[STABLE CHECK] [04:34:28] Temperature is too high.
[STABLE CHECK] [04:34:28] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [04:34:48] Success: temperature is below threshold.
[MAIN] [04:34:48] Terminated sensors
[STABLE CHECK] [04:34:48] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [04:35:08] Success: Machine is stable.
[EXECUTION] [04:35:08] Successfully reached stable state
[EXECUTION] [04:35:09] waiting idle for 30 seconds after function execution
[EXECUTION] [04:35:39] Performed tensorflow.keras.applications.MobileNetV2() on input and will now save energy data.
inside_arg_size
outside_arg_size
inside_kwarg_size
++++++4++++++
++++++5++++++
5-size 64.0
++++++5++++++
5-size 64.0
4-size 128.0
++++++5++++++
5-size 64.0
++++++5++++++
5-size 64.0
outside_kwarg_size
inside_object_size
outside_object_size
[EXECUTION] [04:35:39] Result: {'tensorflow.keras.applications.MobileNetV2()': {'energy_data': {'cpu': '{"columns":["time_elapsed",
[EXECUTION] [04:35:39] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/estimator/experiment-5.json
[EXECUTION] [04:35:39] Waiting before running function for 10 seconds.
[EXECUTION] [04:35:49] Sensors started
[STABLE CHECK] [04:35:52] Temperature too high: mean is 40.8, which is greater than 40
[STABLE CHECK] [04:35:52] Temperature is too high.
[STABLE CHECK] [04:35:52] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [04:36:12] Success: temperature is below threshold.
[MAIN] [04:36:12] Terminated sensors
[STABLE CHECK] [04:36:12] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [04:36:32] Success: Machine is stable.
[EXECUTION] [04:36:32] Successfully reached stable state
[EXECUTION] [04:36:35] waiting idle for 30 seconds after function execution
[EXECUTION] [04:37:05] Performed tensorflow.keras.estimator.model_to_estimator() on input and will now save energy data.
inside_arg_size
outside_arg_size
inside_kwarg_size
++++++4++++++
++++++5++++++
5-size 64.0
4-size 64.0
++++++5++++++
5-size 64.0
outside_kwarg_size
inside_object_size
outside_object_size
[EXECUTION] [04:37:05] Result: {'tensorflow.keras.estimator.model_to_estimator()': {'energy_data': {'cpu': '{"columns":["time_elaps
[EXECUTION] [04:37:05] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/estimator/experiment-5.json
[EXECUTION] [04:37:05] Waiting before running function for 10 seconds.
[EXECUTION] [04:37:16] Sensors started
[STABLE CHECK] [04:37:19] Success: temperature is below threshold.
[MAIN] [04:37:19] Terminated sensors
[STABLE CHECK] [04:37:19] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [04:37:39] Success: Machine is stable.
[EXECUTION] [04:37:39] Successfully reached stable state
[EXECUTION] [04:37:48] waiting idle for 30 seconds after function execution
[EXECUTION] [04:38:18] Performed tensorflow.keras.estimator.model_to_estimator.train() on input and will now save energy data.
inside_arg_size
outside_arg_size
inside_kwarg_size
++++++4++++++
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
4-size 120.0
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
outside_kwarg_size
inside_object_size
++++++5++++++
5-size 4264.0
outside_object_size
[EXECUTION] [04:38:18] Result: {'tensorflow.keras.estimator.model_to_estimator.train()': {'energy_data': {'cpu': '{"columns":["time
[EXECUTION] [04:38:18] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/estimator/experiment-5.json
[EXECUTION] [04:38:18] Waiting before running function for 10 seconds.
[EXECUTION] [04:38:28] Sensors started
[STABLE CHECK] [04:38:31] Success: temperature is below threshold.
[MAIN] [04:38:31] Terminated sensors
[STABLE CHECK] [04:38:31] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [04:38:51] Success: Machine is stable.
[EXECUTION] [04:38:51] Successfully reached stable state
[EXECUTION] [04:38:54] waiting idle for 30 seconds after function execution
[EXECUTION] [04:39:24] Performed tensorflow.keras.estimator.model_to_estimator.evaluate() on input and will now save energy data.
inside_arg_size
outside_arg_size
inside_kwarg_size
++++++4++++++
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
4-size 120.0
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
outside_kwarg_size
inside_object_size
++++++5++++++
5-size 4264.0
outside_object_size
[EXECUTION] [04:39:24] Result: {'tensorflow.keras.estimator.model_to_estimator.evaluate()': {'energy_data': {'cpu': '{"columns":["t
[EXECUTION] [04:39:24] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/estimator/experiment-5.json
[EXECUTION] [04:39:24] Waiting before running function for 10 seconds.
[EXECUTION] [04:39:35] Sensors started
[STABLE CHECK] [04:39:38] Success: temperature is below threshold.
[MAIN] [04:39:38] Terminated sensors
[STABLE CHECK] [04:39:38] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [04:39:58] Success: Machine is stable.
[EXECUTION] [04:39:58] Successfully reached stable state
[EXECUTION] [04:39:58] waiting idle for 30 seconds after function execution
[EXECUTION] [04:40:28] Performed tensorflow.estimator.Estimator.train() on input and will now save energy data.
inside_arg_size
++++++4++++++
++++++5++++++
5-size 0.0
4-size 0.0
++++++5++++++
5-size 0.0
WARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpf1_4n3yi
WARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpf1_4n3yi
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/canned/linear.py:1468: UserWarning: `layer.add_variable` is deprecated and will be removed in a future version. Please use `layer.add_weight` method instead.
  self.bias = self.add_variable(
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/canned/linear.py:1468: UserWarning: `layer.add_variable` is deprecated and will be removed in a future version. Please use `layer.add_weight` method instead.
  self.bias = self.add_variable(
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/saved_model/signature_def_utils_impl.py:150: build_tensor_info (from tensorflow.python.saved_model.utils_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.utils.build_tensor_info or tf.compat.v1.saved_model.build_tensor_info.
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/saved_model/signature_def_utils_impl.py:150: build_tensor_info (from tensorflow.python.saved_model.utils_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.utils.build_tensor_info or tf.compat.v1.saved_model.build_tensor_info.
WARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpfnmpa_hr
WARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpfnmpa_hr
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/estimator.py:1244: StrategyBase.configure (from tensorflow.python.distribute.distribute_lib) is deprecated and will be removed in a future version.
Instructions for updating:
use `update_config_proto` instead.
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/estimator.py:1244: StrategyBase.configure (from tensorflow.python.distribute.distribute_lib) is deprecated and will be removed in a future version.
Instructions for updating:
use `update_config_proto` instead.
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/data/ops/dataset_ops.py:453: UserWarning: To make it possible to preserve tf.data options across serialization boundaries, their implementation has moved to be part of the TensorFlow graph. As a consequence, the options value is in general no longer known at graph construction time. Invoking this method in graph mode retains the legacy behavior of the original implementation, but note that the returned value might not reflect the actual value of the options.
  warnings.warn("To make it possible to preserve tf.data options across "
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/canned/linear.py:1468: UserWarning: `layer.add_variable` is deprecated and will be removed in a future version. Please use `layer.add_weight` method instead.
  self.bias = self.add_variable(
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/util.py:95: DistributedIteratorV1.initialize (from tensorflow.python.distribute.input_lib) is deprecated and will be removed in a future version.
Instructions for updating:
Use the iterator's `initializer` property instead.
WARNING:tensorflow:From /home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/util.py:95: DistributedIteratorV1.initialize (from tensorflow.python.distribute.input_lib) is deprecated and will be removed in a future version.
Instructions for updating:
Use the iterator's `initializer` property instead.
2023-12-09 04:42:49.389909: W tensorflow/core/grappler/utils/graph_view.cc:836] No registered 'MultiDeviceIteratorFromStringHandle' OpKernel for GPU devices compatible with node {{node MultiDeviceIteratorFromStringHandle}}
	.  Registered:  device='CPU'

2023-12-09 04:42:49.391699: W tensorflow/core/grappler/utils/graph_view.cc:836] No registered 'MultiDeviceIteratorGetNextFromShard' OpKernel for GPU devices compatible with node {{node MultiDeviceIteratorGetNextFromShard}}
	.  Registered:  device='CPU'

/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow/python/data/ops/dataset_ops.py:453: UserWarning: To make it possible to preserve tf.data options across serialization boundaries, their implementation has moved to be part of the TensorFlow graph. As a consequence, the options value is in general no longer known at graph construction time. Invoking this method in graph mode retains the legacy behavior of the original implementation, but note that the returned value might not reflect the actual value of the options.
  warnings.warn("To make it possible to preserve tf.data options across "
/home/saurabh/miniconda3/envs/tf2/lib/python3.9/site-packages/tensorflow_estimator/python/estimator/canned/linear.py:1468: UserWarning: `layer.add_variable` is deprecated and will be removed in a future version. Please use `layer.add_weight` method instead.
  self.bias = self.add_variable(
2023-12-09 04:43:53.469961: W tensorflow/core/grappler/utils/graph_view.cc:836] No registered 'MultiDeviceIteratorFromStringHandle' OpKernel for GPU devices compatible with node {{node MultiDeviceIteratorFromStringHandle}}
	.  Registered:  device='CPU'

2023-12-09 04:43:53.471700: W tensorflow/core/grappler/utils/graph_view.cc:836] No registered 'MultiDeviceIteratorGetNextFromShard' OpKernel for GPU devices compatible with node {{node MultiDeviceIteratorGetNextFromShard}}
	.  Registered:  device='CPU'

outside_arg_size
inside_kwarg_size
++++++4++++++
++++++5++++++
5-size 56.0
4-size 56.0
++++++5++++++
5-size 56.0
outside_kwarg_size
inside_object_size
++++++5++++++
5-size 3912.0
outside_object_size
[EXECUTION] [04:40:28] Result: {'tensorflow.estimator.Estimator.train()': {'energy_data': {'cpu': '{"columns":["time_elapsed","ener
[EXECUTION] [04:40:28] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/estimator/experiment-5.json
[EXECUTION] [04:40:28] Waiting before running function for 10 seconds.
[EXECUTION] [04:40:39] Sensors started
[STABLE CHECK] [04:40:42] Temperature too high: mean is 41.05555555555556, which is greater than 40
[STABLE CHECK] [04:40:42] Temperature is too high.
[STABLE CHECK] [04:40:42] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [04:41:02] Success: temperature is below threshold.
[MAIN] [04:41:02] Terminated sensors
[STABLE CHECK] [04:41:02] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [04:41:22] Success: Machine is stable.
[EXECUTION] [04:41:22] Successfully reached stable state
[EXECUTION] [04:41:23] waiting idle for 30 seconds after function execution
[EXECUTION] [04:41:53] Performed tensorflow.estimator.LinearClassifier.train() on input and will now save energy data.
inside_arg_size
++++++4++++++
++++++5++++++
5-size 0.0
4-size 0.0
++++++5++++++
5-size 0.0
outside_arg_size
inside_kwarg_size
outside_kwarg_size
inside_object_size
++++++5++++++
5-size 3912.0
outside_object_size
[EXECUTION] [04:41:53] Result: {'tensorflow.estimator.LinearClassifier.train()': {'energy_data': {'cpu': '{"columns":["time_elapsed
[EXECUTION] [04:41:53] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/estimator/experiment-5.json
{'class_ids': <tf.Tensor: shape=(1, 1), dtype=int64, numpy=array([[1]])>, 'probabilities': <tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.41430426, 0.58569574]], dtype=float32)>, 'all_class_ids': <tf.Tensor: shape=(1, 2), dtype=int32, numpy=array([[0, 1]], dtype=int32)>, 'logits': <tf.Tensor: shape=(1, 1), dtype=float32, numpy=array([[0.34619987]], dtype=float32)>, 'all_classes': <tf.Tensor: shape=(1, 2), dtype=string, numpy=array([[b'0', b'1']], dtype=object)>, 'logistic': <tf.Tensor: shape=(1, 1), dtype=float32, numpy=array([[0.58569574]], dtype=float32)>, 'classes': <tf.Tensor: shape=(1, 1), dtype=string, numpy=array([[b'1']], dtype=object)>}
{'class_ids': <tf.Tensor: shape=(1, 1), dtype=int64, numpy=array([[0]])>, 'probabilities': <tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.7569593 , 0.24304068]], dtype=float32)>, 'all_class_ids': <tf.Tensor: shape=(1, 2), dtype=int32, numpy=array([[0, 1]], dtype=int32)>, 'logits': <tf.Tensor: shape=(1, 1), dtype=float32, numpy=array([[-1.1360806]], dtype=float32)>, 'all_classes': <tf.Tensor: shape=(1, 2), dtype=string, numpy=array([[b'0', b'1']], dtype=object)>, 'logistic': <tf.Tensor: shape=(1, 1), dtype=float32, numpy=array([[0.2430407]], dtype=float32)>, 'classes': <tf.Tensor: shape=(1, 1), dtype=string, numpy=array([[b'0']], dtype=object)>}
[EXECUTION] [04:41:53] Waiting before running function for 10 seconds.
[EXECUTION] [04:42:03] Sensors started
[STABLE CHECK] [04:42:06] Temperature too high: mean is 42, which is greater than 40
[STABLE CHECK] [04:42:06] Temperature is too high.
[STABLE CHECK] [04:42:06] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [04:42:26] Success: temperature is below threshold.
[MAIN] [04:42:26] Terminated sensors
[STABLE CHECK] [04:42:26] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [04:42:46] Success: Machine is stable.
[EXECUTION] [04:42:46] Successfully reached stable state
[EXECUTION] [04:42:49] waiting idle for 30 seconds after function execution
[EXECUTION] [04:43:19] Performed tensorflow.estimator.LinearRegressor.train() on input and will now save energy data.
inside_arg_size
outside_arg_size
inside_kwarg_size
++++++4++++++
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
4-size 120.0
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
outside_kwarg_size
inside_object_size
++++++5++++++
5-size 28384.0
outside_object_size
[EXECUTION] [04:43:19] Result: {'tensorflow.estimator.LinearRegressor.train()': {'energy_data': {'cpu': '{"columns":["time_elapsed"
[EXECUTION] [04:43:19] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/estimator/experiment-5.json
[EXECUTION] [04:43:19] Waiting before running function for 10 seconds.
[EXECUTION] [04:43:29] Sensors started
[STABLE CHECK] [04:43:32] Success: temperature is below threshold.
[MAIN] [04:43:32] Terminated sensors
[STABLE CHECK] [04:43:32] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [04:43:52] Success: Machine is stable.
[EXECUTION] [04:43:52] Successfully reached stable state
[EXECUTION] [04:43:53] waiting idle for 30 seconds after function execution
[EXECUTION] [04:44:23] Performed tensorflow.estimator.LinearRegressor.evaluate() on input and will now save energy data.
inside_arg_size
outside_arg_size
inside_kwarg_size
++++++4++++++
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
4-size 120.0
++++++5++++++
5-size 64.0
++++++5++++++
5-size 56.0
outside_kwarg_size
inside_object_size
++++++5++++++
5-size 28384.0
outside_object_size
[EXECUTION] [04:44:23] Result: {'tensorflow.estimator.LinearRegressor.evaluate()': {'energy_data': {'cpu': '{"columns":["time_elaps
[EXECUTION] [04:44:23] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/estimator/experiment-5.json
