2023-12-09 03:29:01.026502: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.
2023-12-09 03:29:01.032503: W tensorflow/python/util/util.cc:368] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
trainable variables: (<tf.Variable 'train_me:0' shape=() dtype=float32, numpy=5.0>,)
all variables: (<tf.Variable 'train_me:0' shape=() dtype=float32, numpy=5.0>, <tf.Variable 'do_not_train_me:0' shape=() dtype=float32, numpy=5.0>)
Model results: tf.Tensor([[0. 0.]], shape=(1, 2), dtype=float32)
Submodules: (<__main__.Dense object at 0x7fda05e30d00>, <__main__.Dense object at 0x7fda05e30e20>)
<tf.Variable 'b:0' shape=(3,) dtype=float32, numpy=array([0., 0., 0.], dtype=float32)> 

<tf.Variable 'w:0' shape=(3, 3) dtype=float32, numpy=
array([[ 0.15359297, -0.2344509 , -0.209459  ],
       [-0.46696234,  0.24943824,  0.3151003 ],
       [ 0.00484902, -0.01602769, -0.9550595 ]], dtype=float32)> 

<tf.Variable 'b:0' shape=(2,) dtype=float32, numpy=array([0., 0.], dtype=float32)> 

<tf.Variable 'w:0' shape=(3, 2) dtype=float32, numpy=
array([[ 0.46462843, -0.32358423],
       [-0.18247405, -2.0797923 ],
       [ 0.9542601 , -0.9493838 ]], dtype=float32)> 

Model results: tf.Tensor([[0.        4.4242473]], shape=(1, 2), dtype=float32)
tf.Tensor([[0.23675442 0.116418  ]], shape=(1, 2), dtype=float32)
tf.Tensor(
[[[0.23675442 0.116418  ]
  [0.23675442 0.116418  ]]], shape=(1, 2, 2), dtype=float32)
[EXECUTION] [03:29:01] Waiting before running function for 10 seconds.
[EXECUTION] [03:29:11] Sensors started
[STABLE CHECK] [03:29:14] Temperature too high: mean is 44.35, which is greater than 40
[STABLE CHECK] [03:29:14] Temperature is too high.
[STABLE CHECK] [03:29:14] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [03:29:34] Temperature too high: mean is 41.9, which is greater than 40
[STABLE CHECK] [03:29:34] Temperature is too high.
[STABLE CHECK] [03:29:34] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [03:29:54] Temperature too high: mean is 41, which is greater than 40
[STABLE CHECK] [03:29:54] Temperature is too high.
[STABLE CHECK] [03:29:54] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [03:30:14] Temperature too high: mean is 41, which is greater than 40
[STABLE CHECK] [03:30:14] Temperature is too high.
[STABLE CHECK] [03:30:14] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [03:30:34] Temperature too high: mean is 41, which is greater than 40
[STABLE CHECK] [03:30:34] Temperature is too high.
[STABLE CHECK] [03:30:34] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [03:30:54] Temperature too high: mean is 41, which is greater than 40
[STABLE CHECK] [03:30:54] Temperature is too high.
[STABLE CHECK] [03:30:54] Waiting 20 seconds to reach low temperature.

[STABLE CHECK] [03:31:14] Temperature too high: mean is 40.45, which is greater than 40
[STABLE CHECK] [03:31:14] Temperature is too high.
[MAIN] [03:31:14] Terminated sensors
[EXECUTION] [03:31:44] Waiting before running function for 10 seconds.
[EXECUTION] [03:31:55] Sensors started
[STABLE CHECK] [03:31:58] Success: temperature is below threshold.
[MAIN] [03:31:58] Terminated sensors
[STABLE CHECK] [03:31:58] Waiting 20 seconds to reach stable state.

[STABLE CHECK] [03:32:18] Success: Machine is stable.
[EXECUTION] [03:32:18] Successfully reached stable state
[EXECUTION] [03:32:18] waiting idle for 30 seconds after function execution
[EXECUTION] [03:32:48] Performed tensorflow.profiler.experimental.start() on input and will now save energy data.
inside_arg_size
++++++4++++++
++++++5++++++
5-size 80.0
4-size 80.0
++++++5++++++
5-size 80.0
outside_arg_size
inside_kwarg_size
outside_kwarg_size
inside_object_size
outside_object_size
[EXECUTION] [03:32:48] Result: {'tensorflow.profiler.experimental.start()': {'energy_data': {'cpu': '{"columns":["time_elapsed","en
[EXECUTION] [03:32:48] Data written to file /home/saurabh/method-energy-dataset/dataset/tensorflow_docs/intro_to_modules/experiment-5.json
tf.Tensor([[0.       5.348799]], shape=(1, 2), dtype=float32)
tf.Tensor([[0.23675442 0.116418  ]], shape=(1, 2), dtype=float32)
tf.Tensor(
[[[0.23675442 0.116418  ]
  [0.23675442 0.116418  ]]], shape=(1, 2, 2), dtype=float32)
Model results: tf.Tensor(
[[-0.7453613 -2.7480469 -5.665283 ]
 [-1.118042  -4.1220703 -8.497925 ]], shape=(2, 3), dtype=float32)
Failed: Exception encountered when calling layer "flexible_dense" (type FlexibleDense).

Matrix size-incompatible: In[0]: [1,4], In[1]: [3,3] [Op:MatMul]

Call arguments received:
  â€¢ inputs=tf.Tensor(shape=(1, 4), dtype=float32)
Traceback (most recent call last):
  File "/home/saurabh/method-energy-dataset/projects/tensorflow_docs_patched/site/en/guide/intro_to_modules_method-level.py", line 201, in <module>
    @keras.saving.register_keras_serializable()
AttributeError: module 'keras.saving' has no attribute 'register_keras_serializable'
